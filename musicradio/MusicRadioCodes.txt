Radio Driver

package musicradio;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class radioDriver {
    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "Radio and Skip Counter");
        job.setJarByClass(radioDriver.class);
        job.setMapperClass(radioMapper.class);
        job.setReducerClass(radioReducer.class);

        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(Text.class);

        FileInputFormat.addInputPath(job, new Path(args[0])); // HDFS input file
        FileOutputFormat.setOutputPath(job, new Path(args[1])); // HDFS output dir
        job.setJarByClass(radioDriver.class);
        job.setMapperClass(radioMapper.class);
        job.setReducerClass(radioReducer.class);

        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(Text.class);

        FileInputFormat.addInputPath(job, new Path(args[0])); // HDFS input file
        FileOutputFormat.setOutputPath(job, new Path(args[1])); // HDFS output dir
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}

Radio Mapper

package musicradio;

import java.io.IOException;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.Mapper;

public class radioMapper extends Mapper<LongWritable, Text, Text, Text> {
    public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
        if (key.get() == 0 && value.toString().contains("UserId")) return; // skip header

        String[] fields = value.toString().split(",");
        if (fields.length < 5) return;
        String trackId = fields[1].trim();
        String radio = fields[3].trim();
        String skip = fields[4].trim();

        if (radio.equals("1")) {
            context.write(new Text(trackId), new Text("RADIO"));
        }
        if (skip.equals("1")) {
            context.write(new Text(trackId), new Text("SKIP"));
        }
    }
}

Radio Reducer

package musicradio;

import java.io.IOException;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.Reducer;

public class radioReducer extends Reducer<Text, Text, Text, Text> {
    public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
        int radioCount = 0;
        int skipCount = 0;

        for (Text val : values) {
            if (val.toString().equals("RADIO")) {
                radioCount++;
            } else if (val.toString().equals("SKIP")) {
                skipCount++;
            }
        }

        context.write(key, new Text("RadioCount: " + radioCount + ", SkipCount: " + skipCount));
    }
}